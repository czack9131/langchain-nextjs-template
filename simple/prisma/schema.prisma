generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["vectorStore", "chatHistory"]
}

model Document {
  id        String                 @id @default(cuid())
  content   String
  namespace String?                @default("default")
  vector    Unsupported("vector")?
  chat      Chat?                  @relation("ChatDocuments", fields: [chatId], references: [id])
  chatId    String?
  createdAt DateTime               @default(now())
  updatedAt DateTime               @updatedAt

  @@index([chatId], name: "idx_document_chatId")
  @@schema("vectorStore")
}

model User {
  id        String        @id @default(cuid())
  userType  UserType
  messages  ChatMessage[] @relation("UserMessages")
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  @@schema("chatHistory")
}

model Chat {
  id        String        @id @default(cuid())
  messages  ChatMessage[] @relation("Messages")
  sessionId String?       @unique
  documents Document[]    @relation("ChatDocuments")
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  @@index([sessionId], name: "idx_chat_sessionId")
  @@schema("chatHistory")
}

model ChatMessage {
  id        String   @id @default(cuid())
  content   String
  user      User     @relation("UserMessages", fields: [userId], references: [id])
  userId    String
  chat      Chat     @relation("Messages", fields: [chatId], references: [id])
  chatId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId, chatId], name: "idx_chatmessage_userId_chatId")
  @@schema("chatHistory")
}

enum UserType {
  SYSTEM
  AI
  HUMAN

  @@schema("chatHistory")
}
